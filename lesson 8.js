function well(x){
    let acc = 0;
    for(const word of x) {
        if (word === 'good') {
            acc += 1;
        }
    }
    if (acc === 0) {
        return 'Fail!';
    }
    if (acc <= 2) {
        return 'Publish!';
    }
    return 'I smell a series!';
}
// 'I smell a series!''Fail!''Publish!'
// console.log(well(['bad', 'bad', 'bad']))
// console.log(well(['good', 'bad', 'bad', 'bad', 'bad']))
// console.log(well(['good', 'bad', 'bad', 'bad', 'bad', 'good', 'bad', 'bad', 'good']))



function smallEnough(a, limit){
    // for(const num of a) {
    //     if (num > limit) {
    //         return false;
    //     }
    // }
    // return true;

    return a.every(num => num <= limit);
};
//–º–µ—Ç–æ–¥ every() —Ä–∞–±–æ—Ç–∞–µ—Ç  —Ç–∞–∫; –µ—Å–ª–∏  –¥–ª—è –≤—Å–µ—Ö —ç–ª–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –≤–µ—Ä–Ω—É–ª–æ—Å—å true  —Ç–æ every( ) —Å–∞–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true. –∞ –µ—Å–ª–∏ —Ö–æ—Ç—è–±—ã –æ–¥–∏–Ω –≤–µ—Ä–Ω—É–ª —Ñ–æ–ª—Å —Ç–æ —ç–≤—Ä–∏ –≤–æ–∑–≤–∞—â–∞–µ—Ç —Ñ–æ–ª—Å.

console.log(smallEnough([78, 117, 110, 99, 104, 117, 107, 115], 100)) //false;
console.log(smallEnough([101, 45, 75, 105, 99, 107], 107)) //true

// 

function whichType (arrays) {
    const type = typeof arrays[0]; // –µ—Å–ª–∏ —è —Ö–æ—á—É –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω–æ—Å–ª—å —Ç–æ —á—Ç–æ —É –º–µ–Ω—è –¥–æ–ª–∂–Ω–æ –∑–¥–µ—Å—å –≤—ã–≤–µ—Å—Ç–∏—Å—å –ø–æ—Ç–æ–º—É —á—Ç–æ array d [[]], –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ –±—É–¥–µ—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç.
    return arrays.every( val => typeof val === type);
} // –ø–æ–ª—É—á–∞–µ—Ç—Å—è —á—Ç–æ –µ—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ 2 —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–æ –æ–Ω–∞ –Ω–µ –ø—Ä–æ–π–¥–µ—Ç –ø–æ –∫–∞–∂–¥–æ–º—É –º–∞—Å—Å–∏–≤—É  —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —É–≥–ª—É–±–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤—ã–π –º–∞—Å—Å–∏–≤?
function filterHomogenous (array) {
    let result = [];
    for(const value of array) {
        console.log('' ,value)
        if(whichType(value)) {
            result.push(value);
        }

    }
    return result;
}


console.log(
    "ü¶ñ",filterHomogenous([[1, 5, 4], ['a', 3, 5], ['b'], [], ['1', 2, 3]])
)
